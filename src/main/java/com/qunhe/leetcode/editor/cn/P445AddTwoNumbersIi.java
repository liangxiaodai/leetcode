package com.qunhe.leetcode.editor.cn;
//Áªô‰Ω†‰∏§‰∏™ ÈùûÁ©∫ ÈìæË°®Êù•‰ª£Ë°®‰∏§‰∏™ÈùûË¥üÊï¥Êï∞„ÄÇÊï∞Â≠óÊúÄÈ´ò‰Ωç‰Ωç‰∫éÈìæË°®ÂºÄÂßã‰ΩçÁΩÆ„ÄÇÂÆÉ‰ª¨ÁöÑÊØè‰∏™ËäÇÁÇπÂè™Â≠òÂÇ®‰∏Ä‰ΩçÊï∞Â≠ó„ÄÇÂ∞ÜËøô‰∏§Êï∞Áõ∏Âä†‰ºöËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÈìæË°®„ÄÇ
//
// ‰Ω†ÂèØ‰ª•ÂÅáËÆæÈô§‰∫ÜÊï∞Â≠ó 0 ‰πãÂ§ñÔºåËøô‰∏§‰∏™Êï∞Â≠óÈÉΩ‰∏ç‰ºö‰ª•Èõ∂ÂºÄÂ§¥„ÄÇ
//
//
//
// ËøõÈò∂Ôºö
//
// Â¶ÇÊûúËæìÂÖ•ÈìæË°®‰∏çËÉΩ‰øÆÊîπËØ•Â¶Ç‰ΩïÂ§ÑÁêÜÔºüÊç¢Âè•ËØùËØ¥Ôºå‰Ω†‰∏çËÉΩÂØπÂàóË°®‰∏≠ÁöÑËäÇÁÇπËøõË°åÁøªËΩ¨„ÄÇ
//
//
//
// Á§∫‰æãÔºö
//
// ËæìÂÖ•Ôºö(7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)
//ËæìÂá∫Ôºö7 -> 8 -> 0 -> 7
//
// Related Topics ÈìæË°®
// üëç 344 üëé 0

import java.util.Stack;

public class P445AddTwoNumbersIi {
    //leetcode submit region begin(Prohibit modification and deletion)

    /**
     * Definition for singly-linked list.
     * public class ListNode {
     * int val;
     * ListNode next;
     * ListNode(int x) { val = x; }
     * }
     */
    class Solution {
        public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            Stack<Integer> l1Stack = buildStack(l1);
            Stack<Integer> l2Stack = buildStack(l2);
            Integer carry = 0;
            ListNode head = new ListNode(-1);
            while (!l1Stack.empty() || !l2Stack.empty() || carry != 0) {
                Integer x = l1Stack.empty() ? 0 : l1Stack.pop();
                Integer y = l2Stack.empty() ? 0 : l2Stack.pop();
                Integer sum = x + y + carry;
                ListNode node = new ListNode(sum % 10);
                node.next = head.next;
                head.next = node;
                carry = sum / 10;
            }
            return head.next;
        }

        public Stack<Integer> buildStack(ListNode head) {
            Stack<Integer> stack = new Stack<>();
            while (head != null) {
                stack.push(head.val);
                head = head.next;
            }
            return stack;
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}
